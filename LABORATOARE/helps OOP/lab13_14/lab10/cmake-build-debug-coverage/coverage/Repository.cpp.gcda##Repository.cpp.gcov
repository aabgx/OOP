        -:    0:Source:/mnt/c/Users/Laura/CLionProjects/lab_8-9/Repository.cpp
        -:    0:Graph:/mnt/c/Users/Laura/CLionProjects/lab_8-9/cmake-build-debug-coverage/CMakeFiles/untitled.dir/Repository.cpp.gcno
        -:    0:Data:/mnt/c/Users/Laura/CLionProjects/lab_8-9/cmake-build-debug-coverage/CMakeFiles/untitled.dir/Repository.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Laura on 4/8/2022.
        -:    3://
        -:    4:
        -:    5:#include "Repository.h"
        -:    6:#include <algorithm>
        -:    7:#include "VectorDinamicTemplate.h"
        -:    8:#include <assert.h>
function _ZN8ProdRepo6existsERK6Produs called 39 returned 100% blocks executed 95%
       39:    9:bool ProdRepo::exists(const Produs& p) {
        -:   10:    try {
      103:   11:        find(p.getNume(), p.getProd());
       39:   11-block  0
call    0 returned 39
branch  1 taken 39 (fallthrough)
branch  2 taken 0 (throw)
       39:   11-block  1
call    3 returned 39
branch  4 taken 39 (fallthrough)
branch  5 taken 0 (throw)
       39:   11-block  2
call    6 returned 39
branch  7 taken 7 (fallthrough)
branch  8 taken 32 (throw)
        7:   11-block  3
call    9 returned 7
call   10 returned 7
       32:   11-block  4
call   11 returned 32
       32:   11-block  5
       32:   11-block  6
call   12 returned 32
       32:   11-block  7
        7:   12:        return true;
        -:   13:    }
       64:   14:    catch (RepoExcep) {
       32:   14-block  0
call    0 returned 32
call    1 returned 32
call    2 returned 32
branch  3 taken 32 (fallthrough)
branch  4 taken 0 (throw)
       32:   15:        return false;
call    0 returned 32
        -:   16:    }
        -:   17:}
function _ZN8ProdRepo4findENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 45 returned 24% blocks executed 65%
       45:   18:const Produs& ProdRepo::find(string nume, string producator) {
        -:   19:    //for (const Produs& p : this->allproducts) {
        -:   20:        //if (p.getNume() == nume && p.getProd() == producator) {
        -:   21:            //return p;
        -:   22:        //}
        -:   23:    //}
        -:   24:    vector<Produs>:: iterator f = std::find_if(this->allproducts.begin(), this->allproducts.end(),
function _ZZN8ProdRepo4findENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ENKUlRK6ProdusE_clES8_ called 56 returned 100% blocks executed 68%
       56:   25:                                            [=](const Produs& s) {
       56:   26:                                                return s.getNume() == nume && s.getProd() == producator;
       56:   26-block  0
call    0 returned 56
branch  1 taken 56 (fallthrough)
branch  2 taken 0 (throw)
       56:   26-block  1
call    3 returned 56
branch  4 taken 14 (fallthrough)
branch  5 taken 42
       14:   26-block  2
call    6 returned 14
branch  7 taken 14 (fallthrough)
branch  8 taken 0 (throw)
       14:   26-block  3
call    9 returned 14
branch 10 taken 11 (fallthrough)
branch 11 taken 3
       11:   26-block  4
       45:   26-block  5
       56:   26-block  6
branch 12 taken 14 (fallthrough)
branch 13 taken 42
       14:   26-block  7
call   14 returned 14
       56:   26-block  8
branch 15 taken 56 (fallthrough)
branch 16 taken 0
       56:   26-block  9
call   17 returned 56
       56:   26-block 10
       56:   26-block 11
    $$$$$:   26-block 12
branch 18 never executed
branch 19 never executed
    $$$$$:   26-block 13
call   20 never executed
    $$$$$:   26-block 14
    $$$$$:   26-block 15
branch 21 never executed
branch 22 never executed
    $$$$$:   26-block 16
call   23 never executed
       45:   27:                                            });
       45:   27-block  0
call    0 returned 45
branch  1 taken 45 (fallthrough)
branch  2 taken 0 (throw)
       45:   27-block  1
call    3 returned 45
branch  4 taken 45 (fallthrough)
branch  5 taken 0 (throw)
       45:   27-block  2
call    6 returned 45
call    7 returned 45
call    8 returned 45
branch  9 taken 45 (fallthrough)
branch 10 taken 0 (throw)
       45:   27-block  3
call   11 returned 45
    $$$$$:   27-block  4
call   12 never executed
    $$$$$:   27-block  5
        -:   28:
       45:   29:    if (f != this->allproducts.end())
call    0 returned 45
call    1 returned 45
branch  2 taken 11 (fallthrough)
branch  3 taken 34
       22:   30:        return (*f);
       11:   30-block  0
call    0 returned 11
       11:   30-block  1
        -:   31:    else
       34:   32:        throw RepoExcep("Produsul pe care ati incercat sa il cautati nu exista.\n");
       34:   32-block  0
call    0 returned 34
call    1 returned 34
call    2 returned 34
branch  3 taken 34 (fallthrough)
branch  4 taken 0 (throw)
       34:   32-block  1
call    5 returned 34
branch  6 taken 34 (fallthrough)
branch  7 taken 0 (throw)
       34:   32-block  2
call    8 returned 34
call    9 returned 34
call   10 returned 34
    $$$$$:   32-block  3
call   11 never executed
    $$$$$:   32-block  4
    $$$$$:   32-block  5
call   12 never executed
    $$$$$:   32-block  6
    $$$$$:   32-block  7
call   13 never executed
        -:   33:}
        -:   34:
        -:   35://int ProdRepo::findindex(string nume, string producator) {
        -:   36:   // for (int i = 0;i< this->allproducts.size(); i++ ){
        -:   37:      //  if (this->allproducts.at(i).getNume() == nume && this->allproducts.at(i).getProd() == producator) {
        -:   38:           // return i;
        -:   39:       // }
        -:   40:    //}
        -:   41:   // return -1;
        -:   42://}
        -:   43:
        -:   44:
        -:   45:
function _ZN8ProdRepo7addrepoERK6Produs called 30 returned 93% blocks executed 63%
       30:   46:void ProdRepo::addrepo(const Produs& p) {
       30:   47:    if (exists(p))
       30:   47-block  0
call    0 returned 30
branch  1 taken 2 (fallthrough)
branch  2 taken 28
        -:   48:    {
        2:   49:        throw RepoExcep("Produsul exista deja in magazin\n.");
        2:   49-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
        2:   49-block  1
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:   49-block  2
call    8 returned 2
call    9 returned 2
call   10 returned 0
    $$$$$:   49-block  3
call   11 never executed
    $$$$$:   49-block  4
    $$$$$:   49-block  5
call   12 never executed
    $$$$$:   49-block  6
    $$$$$:   49-block  7
call   13 never executed
        -:   50:    }
       28:   51:    allproducts.push_back(p);
       28:   51-block  0
call    0 returned 28
       28:   52:}
        -:   53:
function _ZN8ProdRepo8dellrepoERK6Produs called 4 returned 50% blocks executed 60%
        4:   54:void ProdRepo::dellrepo(const Produs& p) {
        4:   55:    if (!exists(p))
        4:   55-block  0
call    0 returned 4
branch  1 taken 2 (fallthrough)
branch  2 taken 2
        -:   56:    {
        2:   57:        throw RepoExcep("Produsul pe care doriti sa il stergeti nu exista in magazin.\n");
        2:   57-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
        2:   57-block  1
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:   57-block  2
call    8 returned 2
call    9 returned 2
call   10 returned 0
    $$$$$:   57-block  3
call   11 never executed
    $$$$$:   57-block  4
    $$$$$:   57-block  5
call   12 never executed
    $$$$$:   57-block  6
    $$$$$:   57-block  7
call   13 never executed
        -:   58:    }
        2:   59:    int i = 0;
        6:   60:    for (auto& prod : this->allproducts) {
        2:   60-block  0
call    0 returned 2
call    1 returned 2
        6:   60-block  1
call    2 returned 6
branch  3 taken 4 (fallthrough)
branch  4 taken 2
        4:   60-block  2
call    5 returned 4
        6:   61:        if (prod.getNume() == p.getNume() && prod.getProd() == p.getProd() && prod.getTip() == p.getTip() &&
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   61-block  0
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
        4:   61-block  1
call    6 returned 4
branch  7 taken 2 (fallthrough)
branch  8 taken 2
        2:   61-block  2
call    9 returned 2
branch 10 taken 2 (fallthrough)
branch 11 taken 0 (throw)
        2:   61-block  3
call   12 returned 2
branch 13 taken 2 (fallthrough)
branch 14 taken 0 (throw)
        2:   61-block  4
call   15 returned 2
branch 16 taken 2 (fallthrough)
branch 17 taken 0
        2:   61-block  5
call   18 returned 2
branch 19 taken 2 (fallthrough)
branch 20 taken 0 (throw)
        2:   61-block  6
call   21 returned 2
branch 22 taken 2 (fallthrough)
branch 23 taken 0 (throw)
        2:   61-block  7
call   24 returned 2
branch 25 taken 2 (fallthrough)
branch 26 taken 0
branch 27 taken 2 (fallthrough)
branch 28 taken 0
        2:   61-block  8
        2:   61-block  9
        4:   61-block 10
branch 29 taken 2 (fallthrough)
branch 30 taken 2
        2:   61-block 11
call   31 returned 2
        4:   61-block 12
branch 32 taken 2 (fallthrough)
branch 33 taken 2
        2:   61-block 13
call   34 returned 2
        4:   61-block 14
branch 35 taken 2 (fallthrough)
branch 36 taken 2
        2:   61-block 15
call   37 returned 2
        4:   61-block 16
branch 38 taken 2 (fallthrough)
branch 39 taken 2
        2:   61-block 17
call   40 returned 2
        4:   61-block 18
branch 41 taken 4 (fallthrough)
branch 42 taken 0
        4:   61-block 19
call   43 returned 4
        4:   61-block 20
branch 44 taken 4 (fallthrough)
branch 45 taken 0
        4:   61-block 21
call   46 returned 4
        4:   61-block 22
branch 47 taken 2 (fallthrough)
branch 48 taken 2
    $$$$$:   61-block 23
branch 49 never executed
branch 50 never executed
    $$$$$:   61-block 24
call   51 never executed
    $$$$$:   61-block 25
    $$$$$:   61-block 26
branch 52 never executed
branch 53 never executed
    $$$$$:   61-block 27
call   54 never executed
    $$$$$:   61-block 28
    $$$$$:   61-block 29
branch 55 never executed
branch 56 never executed
    $$$$$:   61-block 30
call   57 never executed
    $$$$$:   61-block 31
    $$$$$:   61-block 32
branch 58 never executed
branch 59 never executed
    $$$$$:   61-block 33
call   60 never executed
    $$$$$:   61-block 34
    $$$$$:   61-block 35
branch 61 never executed
branch 62 never executed
    $$$$$:   61-block 36
call   63 never executed
    $$$$$:   61-block 37
    $$$$$:   61-block 38
branch 64 never executed
branch 65 never executed
    $$$$$:   61-block 39
call   66 never executed
    $$$$$:   61-block 40
        2:   62:            prod.getPret() == p.getPret()) {
        2:   62-block  0
call    0 returned 2
call    1 returned 2
        2:   63:            allproducts.erase(this->allproducts.begin() + i);
        2:   63-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   63-block  1
    $$$$$:   63-block  2
    $$$$$:   63-block  3
    $$$$$:   63-block  4
        -:   64:        }
        4:   65:        i++;
        4:   65-block  0
call    0 returned 4
        -:   66:    }
        -:   67:    //const int index = findindex(p.getNume(), p.getProd());
        -:   68:    //if (index != -1)
        -:   69:    //{
        -:   70:       // this->allproducts.remove(index);
        -:   71:    //}
        2:   72:}
        2:   72-block  0
        -:   73:
function _ZN8ProdRepo10modifyrepoERK6Produs called 3 returned 67% blocks executed 58%
        3:   74:void ProdRepo::modifyrepo(const Produs& p) {
        3:   75:    if (!exists(p))
        3:   75-block  0
call    0 returned 3
branch  1 taken 1 (fallthrough)
branch  2 taken 2
        -:   76:    {
        1:   77:        throw RepoExcep("Produsul pe care doriti sa il modificati nu exista in magazin.\n");
        1:   77-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   77-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   77-block  2
call    8 returned 1
call    9 returned 1
call   10 returned 0
    $$$$$:   77-block  3
call   11 never executed
    $$$$$:   77-block  4
    $$$$$:   77-block  5
call   12 never executed
    $$$$$:   77-block  6
    $$$$$:   77-block  7
call   13 never executed
        -:   78:    }
        2:   79:    int i = 0;
        4:   80:    for (auto& prod : this->allproducts) {
        2:   80-block  0
call    0 returned 2
call    1 returned 2
        4:   80-block  1
call    2 returned 4
branch  3 taken 2 (fallthrough)
branch  4 taken 2
        2:   80-block  2
call    5 returned 2
       2*:   81:        if (prod.getNume() == p.getNume() && prod.getProd() == p.getProd() && prod.getTip() == p.getTip()) {
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   81-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   81-block  1
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0
        2:   81-block  2
call    9 returned 2
branch 10 taken 2 (fallthrough)
branch 11 taken 0 (throw)
        2:   81-block  3
call   12 returned 2
branch 13 taken 2 (fallthrough)
branch 14 taken 0 (throw)
        2:   81-block  4
call   15 returned 2
branch 16 taken 2 (fallthrough)
branch 17 taken 0
        2:   81-block  5
call   18 returned 2
branch 19 taken 2 (fallthrough)
branch 20 taken 0 (throw)
        2:   81-block  6
call   21 returned 2
branch 22 taken 2 (fallthrough)
branch 23 taken 0 (throw)
        2:   81-block  7
call   24 returned 2
branch 25 taken 2 (fallthrough)
branch 26 taken 0
        2:   81-block  8
    %%%%%:   81-block  9
        2:   81-block 10
branch 27 taken 2 (fallthrough)
branch 28 taken 0
        2:   81-block 11
call   29 returned 2
        2:   81-block 12
branch 30 taken 2 (fallthrough)
branch 31 taken 0
        2:   81-block 13
call   32 returned 2
        2:   81-block 14
branch 33 taken 2 (fallthrough)
branch 34 taken 0
        2:   81-block 15
call   35 returned 2
        2:   81-block 16
branch 36 taken 2 (fallthrough)
branch 37 taken 0
        2:   81-block 17
call   38 returned 2
        2:   81-block 18
branch 39 taken 2 (fallthrough)
branch 40 taken 0
        2:   81-block 19
call   41 returned 2
        2:   81-block 20
branch 42 taken 2 (fallthrough)
branch 43 taken 0
        2:   81-block 21
call   44 returned 2
        2:   81-block 22
branch 45 taken 2 (fallthrough)
branch 46 taken 0
    $$$$$:   81-block 23
branch 47 never executed
branch 48 never executed
    $$$$$:   81-block 24
call   49 never executed
    $$$$$:   81-block 25
    $$$$$:   81-block 26
branch 50 never executed
branch 51 never executed
    $$$$$:   81-block 27
call   52 never executed
    $$$$$:   81-block 28
    $$$$$:   81-block 29
branch 53 never executed
branch 54 never executed
    $$$$$:   81-block 30
call   55 never executed
    $$$$$:   81-block 31
    $$$$$:   81-block 32
branch 56 never executed
branch 57 never executed
    $$$$$:   81-block 33
call   58 never executed
    $$$$$:   81-block 34
    $$$$$:   81-block 35
branch 59 never executed
branch 60 never executed
    $$$$$:   81-block 36
call   61 never executed
    $$$$$:   81-block 37
    $$$$$:   81-block 38
branch 62 never executed
branch 63 never executed
    $$$$$:   81-block 39
call   64 never executed
    $$$$$:   81-block 40
        2:   82:            prod.setPret(p.getPret());
        2:   82-block  0
call    0 returned 2
call    1 returned 2
        -:   83:            //prod = p;
        -:   84:        }
        2:   85:        i++;
        2:   85-block  0
call    0 returned 2
        -:   86:    }
        2:   87:}
        2:   87-block  0
        -:   88:
function _ZN8ProdRepo14getallproductsEv called 21 returned 100% blocks executed 100%
       21:   89:vector<Produs>& ProdRepo::getallproducts() noexcept {
       21:   90:    return this->allproducts;
       21:   90-block  0
        -:   91:}
        -:   92:
function _Z11testaddrepov called 1 returned 100% blocks executed 48%
        1:   93:void testaddrepo() {
        2:   94:    ProdRepo testrepo;
        1:   94-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   94-block  1
call    2 never executed
        3:   95:    Produs prod1{ "aaa","bbb","ccc",38.5 };
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   95-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   95-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   95-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:   95-block  3
    $$$$$:   95-block  4
    $$$$$:   95-block  5
    $$$$$:   95-block  6
    $$$$$:   95-block  7
    $$$$$:   95-block  8
call   20 returned 1
    $$$$$:   95-block  9
call   21 never executed
        1:   96:    testrepo.addrepo(prod1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   97:    assert(testrepo.getallproducts().size() == 1);
        1:   97-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   97-block  1
call    4 never executed
        -:   98:
        3:   99:    Produs prod2{ "aaa","gfhc","ccc",55};
        1:   99-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   99-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   99-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   99-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:   99-block  4
    $$$$$:   99-block  5
    $$$$$:   99-block  6
    $$$$$:   99-block  7
    $$$$$:   99-block  8
    $$$$$:   99-block  9
call   20 returned 1
    $$$$$:   99-block 10
call   21 never executed
        -:  100:    try {
        1:  101:        testrepo.addrepo(prod2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:  102:        assert(false);
    %%%%%:  102-block  0
call    0 never executed
        -:  103:    }
        1:  104:    catch (RepoExcep) {
        1:  104-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
        -:  105:        assert(true);
        -:  106:    }
        1:  107:}
function _Z8testdellv called 1 returned 100% blocks executed 52%
        1:  108:void testdell() {
        2:  109:    ProdRepo testrepo;
        1:  109-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  109-block  1
call    2 never executed
        3:  110:    Produs prod1{ "aaa","bbb","ccc",38.5 };
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  110-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  110-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  110-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:  110-block  3
    $$$$$:  110-block  4
    $$$$$:  110-block  5
    $$$$$:  110-block  6
    $$$$$:  110-block  7
    $$$$$:  110-block  8
call   20 returned 1
    $$$$$:  110-block  9
call   21 never executed
        1:  111:    testrepo.addrepo(prod1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  112:    assert(testrepo.getallproducts().size() == 1);
        1:  112-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  112-block  1
call    4 never executed
        -:  113:
        3:  114:    Produs prod2{ "abva","gfhc","ccc",55 };
        1:  114-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  114-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  114-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  114-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:  114-block  4
    $$$$$:  114-block  5
    $$$$$:  114-block  6
    $$$$$:  114-block  7
    $$$$$:  114-block  8
    $$$$$:  114-block  9
call   20 returned 1
    $$$$$:  114-block 10
call   21 never executed
        1:  115:    testrepo.addrepo(prod2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  116:    assert(testrepo.getallproducts().size() == 2);
        1:  116-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  116-block  1
call    4 never executed
        1:  117:    testrepo.dellrepo(prod2);
        1:  117-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  118:    assert(testrepo.getallproducts().size() == 1);
        1:  118-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  118-block  1
call    4 never executed
        -:  119:    try {
        1:  120:        testrepo.dellrepo(prod2);
        1:  120-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:  121:        assert(false);
    %%%%%:  121-block  0
call    0 never executed
        -:  122:    }
        1:  123:    catch (RepoExcep) {
        1:  123-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
        -:  124:        assert(true);
        -:  125:    }
        1:  126:}
        -:  127:
function _Z8testfindv called 1 returned 100% blocks executed 53%
        1:  128:void testfind()
        -:  129:{
        2:  130:    ProdRepo testrepo;
        1:  130-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  130-block  1
call    2 never executed
        3:  131:    Produs prod1{ "aaa","bbb","ccc",38.5 };
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  131-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  131-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  131-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:  131-block  3
    $$$$$:  131-block  4
    $$$$$:  131-block  5
    $$$$$:  131-block  6
    $$$$$:  131-block  7
    $$$$$:  131-block  8
call   20 returned 1
    $$$$$:  131-block  9
call   21 never executed
        3:  132:    Produs prod2{ "lll","gfhc","ooo",55 };
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  132-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  132-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  132-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:  132-block  3
    $$$$$:  132-block  4
    $$$$$:  132-block  5
    $$$$$:  132-block  6
    $$$$$:  132-block  7
    $$$$$:  132-block  8
call   20 returned 1
    $$$$$:  132-block  9
call   21 never executed
        1:  133:    testrepo.addrepo(prod1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  134:    assert(testrepo.exists(prod1));
        1:  134-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  134-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:  134-block  2
call    5 never executed
       1*:  135:    assert(!testrepo.exists(prod2));
        1:  135-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  135-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:  135-block  2
call    5 never executed
        1:  136:    testrepo.addrepo(prod2);
        1:  136-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        3:  137:    auto foundprod = testrepo.find("lll", "ooo");
        1:  137-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  137-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  137-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:  137-block  3
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
call   14 returned 1
call   15 returned 1
call   16 returned 1
    $$$$$:  137-block  4
    $$$$$:  137-block  5
    $$$$$:  137-block  6
    $$$$$:  137-block  7
call   17 returned 1
    $$$$$:  137-block  8
call   18 never executed
       1*:  138:    assert(foundprod.getPret() == 55);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  138-block  0
call    3 never executed
       1*:  139:    assert(foundprod.getNume() == "lll");
        1:  139-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  139-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:  139-block  2
call    6 never executed
        1:  139-block  3
call    7 returned 1
        -:  140:    //auto found=testrepo.find("ava","ajh");
        -:  141:
        -:  142:    try {
       5*:  143:        testrepo.find("jhb", "ccc");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  143-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  143-block  1
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1 (throw)
    %%%%%:  143-block  2
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
        1:  143-block  3
call   15 returned 1
        1:  143-block  4
        1:  143-block  5
call   16 returned 1
        1:  143-block  6
        1:  143-block  7
call   17 returned 1
        1:  143-block  8
        1:  143-block  9
call   18 returned 1
        1:  143-block 10
    #####:  144:        assert(false);
call    0 never executed
        -:  145:    }
        1:  146:    catch (RepoExcep& ve) {
        1:  146-block  0
call    0 returned 1
    $$$$$:  146-block  1
call    1 never executed
        1:  147:        assert(ve.getErrorMessage() == "Produsul pe care ati incercat sa il cautati nu exista.\n");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  147-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:  147-block  1
call    6 never executed
        1:  147-block  2
call    7 returned 1
call    8 returned 1
        -:  148:    }
        -:  149:
        1:  150:}
function _Z10testmodifyv called 1 returned 100% blocks executed 46%
        1:  151:void testmodify()
        -:  152:{
        2:  153:    ProdRepo testrepo;
        1:  153-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  153-block  1
call    2 never executed
        3:  154:    Produs prod1{ "aaa","bbb","ccc",38.5 };
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  154-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  154-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  154-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:  154-block  3
    $$$$$:  154-block  4
    $$$$$:  154-block  5
    $$$$$:  154-block  6
    $$$$$:  154-block  7
    $$$$$:  154-block  8
call   20 returned 1
    $$$$$:  154-block  9
call   21 never executed
        1:  155:    testrepo.addrepo(prod1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  156:    assert(testrepo.getallproducts().size() == 1);
        1:  156-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  156-block  1
call    4 never executed
        3:  157:    Produs prod2{ "aaa","bbb","ccc",46 };
        1:  157-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  157-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  157-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  157-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:  157-block  4
    $$$$$:  157-block  5
    $$$$$:  157-block  6
    $$$$$:  157-block  7
    $$$$$:  157-block  8
    $$$$$:  157-block  9
call   20 returned 1
    $$$$$:  157-block 10
call   21 never executed
        3:  158:    Produs prod3{ "aaa","bbb","jjj",78 };
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  158-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  158-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  158-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:  158-block  3
    $$$$$:  158-block  4
    $$$$$:  158-block  5
    $$$$$:  158-block  6
    $$$$$:  158-block  7
    $$$$$:  158-block  8
call   20 returned 1
    $$$$$:  158-block  9
call   21 never executed
        1:  159:    testrepo.modifyrepo(prod2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  160:    assert(testrepo.find("aaa","ccc").getPret() == 46);
        1:  160-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  160-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  160-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:  160-block  3
call   11 returned 1
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:  160-block  4
call   14 never executed
        1:  160-block  5
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
    $$$$$:  160-block  6
call   19 never executed
    $$$$$:  160-block  7
    $$$$$:  160-block  8
call   20 never executed
    $$$$$:  160-block  9
    $$$$$:  160-block 10
call   21 never executed
    $$$$$:  160-block 11
    $$$$$:  160-block 12
call   22 never executed
    $$$$$:  160-block 13
        -:  161:    try {
        1:  162:        testrepo.modifyrepo(prod3);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:  163:        assert(false);
    %%%%%:  163-block  0
call    0 never executed
        -:  164:    }
        1:  165:    catch (RepoExcep& ve) {
        1:  165-block  0
call    0 returned 1
    $$$$$:  165-block  1
call    1 never executed
        1:  166:        assert(ve.getErrorMessage() == "Produsul pe care doriti sa il modificati nu exista in magazin.\n");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  166-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:  166-block  1
call    6 never executed
        1:  166-block  2
call    7 returned 1
call    8 returned 1
        -:  167:    }
        -:  168:
        1:  169:}
        -:  170:
        -:  171:
        -:  172:
function _Z9testerepov called 1 returned 100% blocks executed 100%
        1:  173:void testerepo() {
        1:  174:    testaddrepo();
        1:  174-block  0
call    0 returned 1
        1:  175:    testfind();
call    0 returned 1
        1:  176:    testdell();
call    0 returned 1
        1:  177:    testmodify();
call    0 returned 1
        1:  178:}
