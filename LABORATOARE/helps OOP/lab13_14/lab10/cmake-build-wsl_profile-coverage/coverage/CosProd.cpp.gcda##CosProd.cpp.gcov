        -:    0:Source:/mnt/c/Users/Laura/CLionProjects/lab_8-9/CosProd.cpp
        -:    0:Graph:/mnt/c/Users/Laura/CLionProjects/lab_8-9/cmake-build-wsl_profile-coverage/CMakeFiles/untitled.dir/CosProd.cpp.gcno
        -:    0:Data:/mnt/c/Users/Laura/CLionProjects/lab_8-9/cmake-build-wsl_profile-coverage/CMakeFiles/untitled.dir/CosProd.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Laura on 4/13/2022.
        -:    3://
        -:    4:
        -:    5:#include "CosProd.h"
        -:    6:#include <assert.h>
        -:    7:using std::shuffle;
        -:    8:
function _ZN4List7addlistERK6Produs called 3 returned 100% blocks executed 100%
        3:    9:void List::addlist(const Produs& s) {
        3:   10:    this->listproducts.push_back(s);
        3:   10-block  0
call    0 returned 3
        3:   11:}
function _ZN4List9emptylistEv called 3 returned 100% blocks executed 100%
        3:   12:void List::emptylist() {
        3:   13:    this->listproducts.clear();
        3:   13-block  0
call    0 returned 3
        3:   14:}
        -:   15:
function _ZN4List13addrandomlistESt6vectorI6ProdusSaIS1_EEm called 2 returned 100% blocks executed 88%
        2:   16:void List::addrandomlist(vector<Produs> originalprod, size_t howMany) {
        2:   17:    shuffle(originalprod.begin(), originalprod.end(), std::default_random_engine(std::random_device{}())); //amesteca vectorul v
        2:   17-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   17-block  1
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0 (throw)
        2:   17-block  2
call    7 returned 2
call    8 returned 2
call    9 returned 2
branch 10 taken 2 (fallthrough)
branch 11 taken 0 (throw)
        2:   17-block  3
call   12 returned 2
    $$$$$:   17-block  4
    $$$$$:   17-block  5
call   13 never executed
       10:   18:    while (listproducts.size() < howMany && originalprod.size() > 0) {
       10:   18-block  0
call    0 returned 10
branch  1 taken 9 (fallthrough)
branch  2 taken 1
        9:   18-block  1
call    3 returned 9
branch  4 taken 8 (fallthrough)
branch  5 taken 1
        8:   18-block  2
        2:   18-block  3
       10:   18-block  4
branch  6 taken 8 (fallthrough)
branch  7 taken 2
        8:   19:        listproducts.push_back(originalprod.back());
        8:   19-block  0
call    0 returned 8
call    1 returned 8
        8:   20:        originalprod.pop_back();
call    0 returned 8
        -:   21:    }
        2:   22:}
        2:   22-block  0
function _ZN4List14getallfromlistEv called 8 returned 100% blocks executed 100%
        8:   23:const vector<Produs>& List::getallfromlist() {
        8:   24:    return this->listproducts;
        8:   24-block  0
        -:   25:}
        -:   26:
function _Z8testeCosv called 1 returned 100% blocks executed 48%
        1:   27:void testeCos(){
        2:   28:    List teste;
        1:   28-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   28-block  1
call    2 never executed
        3:   29:    Produs prod1{ "aaa","bbb","ccc",38.5 };
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   29-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   29-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   29-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
call   20 returned 1
    $$$$$:   29-block  3
    $$$$$:   29-block  4
    $$$$$:   29-block  5
    $$$$$:   29-block  6
    $$$$$:   29-block  7
    $$$$$:   29-block  8
    $$$$$:   29-block  9
call   21 never executed
        3:   30:    Produs prod2{ "lll","gfhc","ooo",55 };
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   30-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   30-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   30-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
        1:   30-block  3
call   20 returned 1
    $$$$$:   30-block  4
    $$$$$:   30-block  5
    $$$$$:   30-block  6
    $$$$$:   30-block  7
    $$$$$:   30-block  8
    $$$$$:   30-block  9
    $$$$$:   30-block 10
call   21 never executed
        1:   31:    teste.addlist(prod1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   32:    teste.addlist(prod2);
        1:   32-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   33:    assert(teste.getallfromlist().size()==2);
        1:   33-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   33-block  1
call    4 never executed
        1:   34:    teste.emptylist();
        1:   34-block  0
call    0 returned 1
       1*:   35:    assert(teste.getallfromlist().size()==0);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   35-block  0
call    4 never executed
        -:   36:
        1:   37:}
